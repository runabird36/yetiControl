global proc shelf_HG_yeti () {
    global string $gBuffStr;
    global string $gBuffStr0;
    global string $gBuffStr1;


    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "import os, sys\nfrom importlib import reload\nyeti_root_path = os.path.realpath(os.environ[\"HGWEAVER_YETI_ROOT\"])\nyeti_root_path = yeti_root_path.replace(\"\\\\\", \"/\")\n\nif yeti_root_path not in sys.path:\n    sys.path.append(yeti_root_path)\n\n\nimport source.YC_updater as YC_updater\nreload(YC_updater)\n\nYC_updater.run_update()\n" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "import os, sys\nfrom importlib import reload\nyeti_root_path = os...." 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -imageOverlayLabel "UpdateLib" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.6 
        -image "pythonFamily.png" 
        -image1 "pythonFamily.png" 
        -style "iconOnly" 
        -marginWidth 0
        -marginHeight 1
        -command "import os, sys\nfrom importlib import reload\nyeti_root_path = os.path.realpath(os.environ[\"HGWEAVER_YETI_ROOT\"])\nyeti_root_path = yeti_root_path.replace(\"\\\\\", \"/\")\n\nif yeti_root_path not in sys.path:\n    sys.path.append(yeti_root_path)\n\n\nimport source.YC_updater as YC_updater\nreload(YC_updater)\n\nYC_updater.run_update()\n" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "import os, sys\nfrom importlib import reload\nyeti_root_path = os.path.realpath(os.environ[\"HGWEAVER_YETI_ROOT\"])\nyeti_root_path = yeti_root_path.replace(\"\\\\\", \"/\")\n\nif yeti_root_path not in sys.path:\n    sys.path.append(yeti_root_path)\n\n\nfrom source.milki.toolkit import YC_exporter\nreload(YC_exporter)\n\nexport_engine = YC_exporter.CFXExporter()\n\nimport traceback\ntry:\n    cmds.select(cl=True)\n    cmds.select(\"ball_GRP\")\n    tar = cmds.ls(sl=True)[0]\n    _path = \"C:/Users/runab/Documents/pipeTest/data/resource/YC_milki_test\"\n    export_engine.pre_execute(tar, \"default\", \"v001\", _path)\n    export_engine.execute()\nexcept:\n    traceback.print_exc()\n\n" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "import os, sys\nfrom importlib import reload\nyeti_root_path = os...." 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -imageOverlayLabel "MilkiTemp" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.6 
        -image "pythonFamily.png" 
        -image1 "pythonFamily.png" 
        -style "iconOnly" 
        -marginWidth 0
        -marginHeight 1
        -command "import os, sys\nfrom importlib import reload\nyeti_root_path = os.path.realpath(os.environ[\"HGWEAVER_YETI_ROOT\"])\nyeti_root_path = yeti_root_path.replace(\"\\\\\", \"/\")\n\nif yeti_root_path not in sys.path:\n    sys.path.append(yeti_root_path)\n\n\nfrom source.milki.toolkit import YC_exporter\nreload(YC_exporter)\n\nexport_engine = YC_exporter.CFXExporter()\n\nimport traceback\ntry:\n    cmds.select(cl=True)\n    cmds.select(\"ball_GRP\")\n    tar = cmds.ls(sl=True)[0]\n    _path = \"C:/Users/runab/Documents/pipeTest/data/resource/YC_milki_test\"\n    export_engine.pre_execute(tar, \"default\", \"v001\", _path)\n    export_engine.execute()\nexcept:\n    traceback.print_exc()\n\n" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;

} 
