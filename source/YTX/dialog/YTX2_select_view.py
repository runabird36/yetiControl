# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file './MTX_dialog/YTX2_select_view.ui'
#
# Created by: PyQt5 UI code generator 5.15.7
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

from importlib import reload
import PySide2.QtCore as QtCore
import PySide2.QtGui as QtGuiOrig
import PySide2.QtWidgets as QtGui


import os
import YTX2New_path_module
reload(YTX2New_path_module)
from qt_material import apply_stylesheet
from random import randint
import LUCY
from customQT import core


class Ui_SelectPubDialog(QtGui.QDialog):
    __check_modeling = QtCore.Signal(object)
    __close_signal = QtCore.Signal(object)
    def __init__(self, _parent=None, data: dict={}) -> None:
        super(Ui_SelectPubDialog, self).__init__(_parent)
        self._parent = _parent
        self.hub = data
        self.style_component = {'background_color': '#3C3C3C',
                                'border_color': '#595959',
                                'font_color':'#D9D9D9',
                                'font_color_pressed': '#595959',
                                'button_color': 'rgba(70,70,70,0.5)'}

        
        

        self.cur_taskname   = ""
        self.cur_variant    = ""
        self.cur_vernum     = ""
        self.selected_path = ""

        self.setupUi_1(self)

    @property
    def close_signal(self)  ->  QtCore.Signal:
        return self.__close_signal

    @property
    def check_modeling(self) -> QtCore.Signal:
        return self.__check_modeling

    @property
    def selected_path(self) -> str:
        return self.__selected_ldv_pubpath

    @selected_path.setter
    def selected_path(self, input_path: str) -> None:
        self.__selected_ldv_pubpath = input_path




    def setupUi_1(self, SelectPubDialog) -> None:
        SelectPubDialog.setObjectName("SelectPubDialog")
        SelectPubDialog.resize(1100, 475)
        # SelectPubDialog.setWindowFlags(QtCore.Qt.FramelessWindowHint)
        SelectPubDialog.setStyleSheet("QDialog{"+\
                                                "background:" +self.style_component['background_color']+";"+\
                                                "border: 2px solid;"+\
                                                "border-color:"+ self.style_component['border_color']+";"+\
                                                "border-radius: 5px;"+\
                                                "color: "+ self.style_component['font_color'] +";"+\
                                                "font: 12px;"+\
                                                "}")
        # self.move_to_center()

    def setupUi_2(self, SelectPubDialog):
        
        self.verticalLayout_2 = QtGui.QVBoxLayout(SelectPubDialog)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.YTX2_main_vl = QtGui.QVBoxLayout()
        self.YTX2_main_vl.setObjectName("YTX2_main_vl")
        self.YTX2_task_info_hl = QtGui.QHBoxLayout()
        self.YTX2_task_info_hl.setObjectName("YTX2_task_info_hl")
        self.YTX2_task_title_lb = QtGui.QLabel(SelectPubDialog)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Preferred, QtGui.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.YTX2_task_title_lb.sizePolicy().hasHeightForWidth())
        self.YTX2_task_title_lb.setSizePolicy(sizePolicy)
        self.YTX2_task_title_lb.setMaximumSize(QtCore.QSize(16777215, 30))
        self.YTX2_task_title_lb.setFrameShape(QtGui.QFrame.StyledPanel)
        self.YTX2_task_title_lb.setFrameShadow(QtGui.QFrame.Plain)
        self.YTX2_task_title_lb.setAlignment(QtCore.Qt.AlignCenter)
        self.YTX2_task_title_lb.setObjectName("YTX2_task_title_lb")
        self.YTX2_task_info_hl.addWidget(self.YTX2_task_title_lb)
        self.YTX2_task_list_cb = QtGui.QComboBox(SelectPubDialog)
        self.YTX2_task_list_cb.setObjectName("YTX2_task_list_cb")
        self.YTX2_task_info_hl.addWidget(self.YTX2_task_list_cb)
        self.YTX2_pubuser_info_lb = QtGui.QLabel(SelectPubDialog)
        self.YTX2_pubuser_info_lb.setObjectName("YTX2_pubuser_info_lb")
        self.YTX2_task_info_hl.addWidget(self.YTX2_pubuser_info_lb)
        spacerItem = QtGui.QSpacerItem(40, 20, QtGui.QSizePolicy.Expanding, QtGui.QSizePolicy.Minimum)
        self.YTX2_task_info_hl.addItem(spacerItem)


        self.YTX2_assign_btn = QtGui.QPushButton(SelectPubDialog)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Preferred, QtGui.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.YTX2_assign_btn.sizePolicy().hasHeightForWidth())
        self.YTX2_assign_btn.setSizePolicy(sizePolicy)
        self.YTX2_assign_btn.setMaximumSize(QtCore.QSize(16777215, 30))
        self.YTX2_task_info_hl.addWidget(self.YTX2_assign_btn)


        self.YTX2_cancel_btn = QtGui.QPushButton(SelectPubDialog)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Preferred, QtGui.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.YTX2_cancel_btn.sizePolicy().hasHeightForWidth())
        self.YTX2_cancel_btn.setSizePolicy(sizePolicy)
        self.YTX2_cancel_btn.setMaximumSize(QtCore.QSize(16777215, 30))
        self.YTX2_task_info_hl.addWidget(self.YTX2_cancel_btn)





        self.YTX2_task_info_hl.setStretch(0, 1)
        self.YTX2_task_info_hl.setStretch(1, 3)
        self.YTX2_task_info_hl.setStretch(2, 3)
        self.YTX2_task_info_hl.setStretch(3, 4)
        self.YTX2_task_info_hl.setStretch(4, 2)
        self.YTX2_task_info_hl.setStretch(5, 2)
        self.YTX2_main_vl.addLayout(self.YTX2_task_info_hl)

        spacerItem2 = QtGui.QSpacerItem(40, 20, QtGui.QSizePolicy.Expanding, QtGui.QSizePolicy.Minimum)
        self.YTX2_main_vl.addItem(spacerItem2)


        self.YTX2_sub_info_hl = QtGui.QHBoxLayout()
        self.YTX2_sub_info_hl.setObjectName("YTX2_sub_info_hl")


        self.YTX2_vernum_lw = QtGui.QListWidget(SelectPubDialog)
        self.YTX2_vernum_lw.setObjectName("YTX2_vernum_lw")
        self.YTX2_sub_info_hl.addWidget(self.YTX2_vernum_lw)


        # self.YTX2_vernum_lw = QtGui.QListWidget(SelectPubDialog)
        # self.YTX2_vernum_lw.setObjectName("YTX2_vernum_lw")
        # self.YTX2_sub_info_hl.addWidget(self.YTX2_vernum_lw)
        
        self.YTX2_status_vl = QtGui.QVBoxLayout()
        self.YTX2_status_vl.setObjectName("YTX2_status_vl")


        self.YTX2_status_tl = core.get_trafficlight_widget(self, lightball_size=35, alpha=50)
        self.YTX2_status_vl.addWidget(self.YTX2_status_tl, 0, QtCore.Qt.AlignCenter)


        self.YTX2_assign_status_te = QtGui.QTextEdit(SelectPubDialog)
        self.YTX2_assign_status_te.setReadOnly(True)
        self.YTX2_assign_status_te.setObjectName("YTX2_assign_status_te")
        self.YTX2_status_vl.addWidget(self.YTX2_assign_status_te)


        self.YTX2_status_vl.setStretch(0, 1)
        self.YTX2_status_vl.setStretch(1, 7)
        self.YTX2_sub_info_hl.addLayout(self.YTX2_status_vl)



        self.line = QtGui.QFrame(SelectPubDialog)
        self.line.setFrameShape(QtGui.QFrame.VLine)
        self.line.setFrameShadow(QtGui.QFrame.Sunken)
        self.line.setObjectName("line")
        self.YTX2_sub_info_hl.addWidget(self.line)



        self.YTX2_sub_thumb_lb = QtGui.QLabel(SelectPubDialog)
        self.YTX2_sub_thumb_lb.setAlignment(QtCore.Qt.AlignCenter)
        self.YTX2_sub_thumb_lb.setObjectName("YTX2_sub_thumb_lb")
        self.YTX2_sub_info_hl.addWidget(self.YTX2_sub_thumb_lb)

        self.YTX2_desc_vl = QtGui.QVBoxLayout()
        self.YTX2_desc_vl.setObjectName("YTX2_desc_vl")

        self.YTX2_desc_title_lb = QtGui.QLabel(SelectPubDialog)
        self.YTX2_desc_title_lb.setAlignment(QtCore.Qt.AlignCenter)
        self.YTX2_desc_title_lb.setObjectName("YTX2_desc_title_lb")
        self.YTX2_desc_title_lb.setFixedHeight(30)
        self.YTX2_desc_vl.addWidget(self.YTX2_desc_title_lb)

        self.YTX2_desc_te = QtGui.QTextEdit(SelectPubDialog)
        self.YTX2_desc_te.setReadOnly(True)
        self.YTX2_desc_te.setObjectName("YTX2_desc_te")
        self.YTX2_desc_vl.addWidget(self.YTX2_desc_te)


        self.YTX2_desc_vl.setStretch(0,1)
        self.YTX2_desc_vl.setStretch(1,6)
        self.YTX2_sub_info_hl.addLayout(self.YTX2_desc_vl)


        self.YTX2_sub_info_hl.setStretch(0, 2)
        self.YTX2_sub_info_hl.setStretch(1, 2)
        self.YTX2_sub_info_hl.setStretch(2, 1)
        self.YTX2_sub_info_hl.setStretch(3, 3)
        self.YTX2_sub_info_hl.setStretch(4, 2)
        self.YTX2_main_vl.addLayout(self.YTX2_sub_info_hl)
        self.YTX2_main_vl.setStretch(0, 1)
        self.YTX2_main_vl.setStretch(1, 1)
        self.YTX2_main_vl.setStretch(2, 5)
        self.verticalLayout_2.addLayout(self.YTX2_main_vl)

        self.retranslateUi(SelectPubDialog)


        self.init_contents()
        self.set_link()

        
        apply_stylesheet(self, YTX2New_path_module.cur_theme)
        QtCore.QMetaObject.connectSlotsByName(SelectPubDialog)

    def retranslateUi(self, SelectPubDialog):
        _translate = QtCore.QCoreApplication.translate
        SelectPubDialog.setWindowTitle(_translate("SelectPubDialog", "Select Pub Data"))
        self.YTX2_task_title_lb.setText(_translate("SelectPubDialog", "Task"))
        self.YTX2_pubuser_info_lb.setText(_translate("SelectPubDialog", " Characterfx Pub User : ..."))
        self.YTX2_assign_btn.setText("어싸인")
        self.YTX2_cancel_btn.setText("취소")
        # __sortingEnabled = self.YTX2_vernum_lw.isSortingEnabled()
        # self.YTX2_vernum_lw.setSortingEnabled(False)
        # self.YTX2_vernum_lw.setSortingEnabled(__sortingEnabled)
        self.YTX2_sub_thumb_lb.setText(_translate("SelectPubDialog", "..."))
        self.YTX2_desc_title_lb.setText("Publish 메세지")
    def move_to_center(self) -> None:
        qt_rect = self.frameGeometry()
        center_point = QtGui.QDesktopWidget().availableGeometry().center()
        qt_rect.moveCenter(center_point)
        self.move(qt_rect.topLeft())


    def set_pubuser_label(self, user_name: str="", date: str="") -> None:
        self.YTX2_pubuser_info_lb.setText(" Characterfx Pub User : {0} / {1}".format(user_name, date))

    def get_cur_taskname(self) -> str:
        return str(self.YTX2_task_list_cb.currentText())
    
    def get_cur_vernum(self) -> str:
        return str(self.YTX2_vernum_lw.currentItem().text())

    def init_contents(self) -> None:
        task_list = self.hub.get_all_task()
        print(task_list)
        self.YTX2_task_list_cb.addItems(task_list)
        self.YTX2_task_list_cb.setCurrentIndex(0)

        cur_task_name = self.get_cur_taskname()
        vernum_list = self.hub.get_all_pubversions(cur_task_name)
        self.YTX2_vernum_lw.addItems(vernum_list)

        self.set_thumbnail(YTX2New_path_module._no_image_icon)


        
    def set_link(self) -> None:
        self.YTX2_task_list_cb.currentTextChanged.connect(self.set_vernum_lw)
        self.YTX2_vernum_lw.itemClicked.connect(self.set_pub_info)

        self.YTX2_assign_btn.clicked.connect(self.get_selected_pubinfo)
        self.YTX2_cancel_btn.clicked.connect(self.close_win)


    def set_vernum_lw(self, task_name: str) -> None:
        self.YTX2_vernum_lw.clear()
        self.refresh_data()

        vernum_list = self.hub.get_all_pubversions(task_name)
        vernum_list.sort(reverse=True)
        self.YTX2_vernum_lw.addItems(vernum_list)



    def set_pub_info(self, vernum: QtGui.QListWidgetItem) -> None:

        pub_info = self.hub.get_pubinfo(self.get_cur_taskname(), str(vernum.text()))
        self.set_pubuser_label(pub_info.created_by, pub_info.created_date)
        self.YTX2_desc_te.setText(pub_info.desc)


        thumb_path = YTX2New_path_module.get_thumb_path(LUCY.get_project(), pub_info.id)
        self.set_thumbnail(thumb_path)


        self.check_modeling.emit(pub_info)


    def set_thumbnail(self, thumb_path: str) -> None:
        if os.path.exists(thumb_path) == False:
            _path = YTX2New_path_module._no_image_icon
        else:
            _path = thumb_path
        _size = 300
        pix_map = QtGuiOrig.QPixmap(_path)
        _w = pix_map.width()
        _h = pix_map.height()
        pix_map = pix_map.scaled(_size,_size, QtCore.Qt.KeepAspectRatio, QtCore.Qt.SmoothTransformation)
        self.YTX2_sub_thumb_lb.setPixmap(pix_map)



    def change_trafficlight(self, status: str, status_msg: str) -> None:
        
        if status == "error":
            self.YTX2_status_tl.red_light = True
        elif status == "warnning":
            self.YTX2_status_tl.yellow_light = True
        elif status == "clear":
            self.YTX2_status_tl.green_light = True

        self.YTX2_assign_status_te.setText(status_msg)

    def cancel_and_close(self):
        self.reject()


    def showEvent(self,_event):

        self.effect = QtGui.QGraphicsOpacityEffect()
        self.setGraphicsEffect(self.effect)

        _opac_anim = QtCore.QPropertyAnimation(self.effect, b"opacity")
        _opac_anim.setDuration(200)
        _opac_anim.setStartValue(0)
        _opac_anim.setEndValue(1)
        # _opac_anim.setEasingCurve(QtCore.QEasingCurve.InBack)
        _opac_anim.setEasingCurve(QtCore.QEasingCurve.InOutCirc)



        # _mouse_pos = QtGuiOrig.QCursor.pos()
        _parent_rect = self._parent.geometry().getRect()
        _parent_x = _parent_rect[0] + _parent_rect[2]/3
        _parent_y = _parent_rect[1] + _parent_rect[3]/3
        origin_size = self.size()
        origin_rect = QtCore.QRect(_parent_x, _parent_y,
                                    origin_size.width(), origin_size.height())
        start_rect = QtCore.QRect(_parent_x, _parent_y, 0, 0)
        self.setGeometry(start_rect)


        _anim = QtCore.QPropertyAnimation(self, b'geometry', self)
        _anim.setStartValue(start_rect)
        _anim.setEndValue(origin_rect)
        _anim.setDuration(200)
        _anim.setEasingCurve(QtCore.QEasingCurve.InOutCirc)




        self.parell_open_anim = QtCore.QParallelAnimationGroup()
        self.parell_open_anim.addAnimation(_opac_anim)
        self.parell_open_anim.addAnimation(_anim)
        self.parell_open_anim.start()

        # time.sleep(1)
        self.setupUi_2(self)

    def get_selected_pubinfo(self):
        cur_taskname = str(self.get_cur_taskname())
        cur_vernum = str(self.get_cur_vernum())

        cur_pubinfo = self.hub.get_pubinfo(cur_taskname, cur_vernum)
        
        self.close_signal.emit(cur_pubinfo)
        self.close_win()
        

    def close_win(self) -> None:
        self.close()
        return


    def refresh_data(self) -> None:
        
        self.set_thumbnail(YTX2New_path_module._no_image_icon)
        self.YTX2_desc_te.setText("")
